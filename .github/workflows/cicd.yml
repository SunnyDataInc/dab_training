# This workflow validates, deploys and run the bundle with a target name 'DEV'.
name: "DEV deployment"

  # Ensure that only a single job or workflow using the same concurrency group
  # runs at a time.
concurrency: "1"

  # Trigger this workflow whenever a pull request is opened against the repo's
  # main branch or  an existing pull request's head branch is updated.
on:
  pull_request:
    branches: [main]

jobs:
  # Bundle validation is automatically performed as part of this deployment.
  # If the validation fails, this workflow fails.
  validate:
    name: "Validate bundle"
    runs-on: ubuntu-latest
    environment: dev

    steps:
      # Check out this repo, so that this workflow can access it.
      - uses: actions/checkout@v3

      # Download the Databricks CLI.
      # See https://github.com/databricks/setup-cli
      - uses: databricks/setup-cli@main

      # Validate the bundle before deploying
      - run: databricks bundle validate -o json
        working-directory: yellow_nyc
        env:
          DATABRICKS_TOKEN: ${{ secrets.DF_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev

  deploy:
    name: "Deploy bundle"
    runs-on: ubuntu-latest
    environment: dev

    # Run the "validate" job first
    needs:
      - validate

    steps:
      # Check out this repo, so that this workflow can access it.
      - uses: actions/checkout@v3

      # Download the Databricks CLI.
      # See https://github.com/databricks/setup-cli
      - uses: databricks/setup-cli@main

      # Deploy the bundle to the "dev" target as defined
      # in the bundle's settings file.
      - run: databricks bundle deploy
        working-directory: yellow_nyc
        env:
          DATABRICKS_TOKEN: ${{ secrets.DF_TOKEN }}
          DATABRICKS_BUNDLE_ENV: dev

  # # Validate, deploy and then run the bundle.
  # pipeline_update:
  #   name: "Run pipeline update"    
  #   runs-on: ubuntu-latest
  #   environment: dev

  #   # Run the "deploy" job first
  #   needs:
  #     - deploy
    
  #   steps:
  #     # Check out this repo, so that this workflow can access it.
  #     - uses: actions/checkout@v3

  #     # Download the Databricks CLI.
  #     - uses: databricks/setup-cli@main

  #     # Run the Databricks workflow named "simple_serverless" as defined in the
  #     # bundle that was just deployed.
  #     - run: databricks bundle run simple_serverless_job --refresh-all
  #       working-directory: dab_examples
  #       env:
  #         DATABRICKS_TOKEN: ${{ secrets.DF_TOKEN }}
  #         DATABRICKS_BUNDLE_ENV: dev